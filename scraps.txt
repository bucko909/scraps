for I in */*/Anime/*; do if [ ! -e "$I"/ANN_id ]; then J="$(echo "$I"|cut -d/ -f4)"; echo Series: "$J"; wget -q --user-agent="mozilla" "http://www.google.com/search?q=site:animenewsnetwork.com/encyclopedia/anime+$J" -O -|perl -ne 'while(/<a href="http:\/\/www.animenewsnetwork.com\/encyclopedia\/anime.php\?id=(\d+)"[^>]*>(.*?)<\/a>/g){print"$1 $2\n"}'; read N; if [ -n "$N" ]; then echo "$N" > "$I"/ANN_id; else echo "Skipping"; echo; fi; fi; done
find ../eMusic ../eMusicTemp -type f -iname '*.mp3'|sort|while read I; do id3v2 --list "$I"|grep '^.... '|sed 's/"/\\"/'|perl -pe '/^(TPE1|TALB|TIT2)/&&s|[/]|_|g'|sed 's/ (.*): \(.*\)/="\1"/'>tmp; . tmp; TN=$(seq -f %02g $TRCK $TRCK); MULTI="$(echo $TPOS|grep -v '/1'|sed 's/\(.*\)\/\(.*\)/ - Disc \1/')"; mkdir -p "$TPE1 - $TALB$MULTI" 2> /dev/null; cp -uav "$I" "$TPE1 - $TALB$MULTI/$TPE1 - $TALB$MULTI - $TN - $TIT2.mp3"; done
find -type f -iname '*.mp3'|sort|perl -ne 'm|\./(.*)/.*?- (\d+)|;if($1 ne $a){print " ERROR" if $n!=$on;print "\n$1:";$a=$1;$n=0}print " $2";$n++;$on=$2;END{print"\n"}'|grep ERROR
for I in */*/Anime/*; do if [ ! -e "$I"/licensed -a -e "$I"/ANN_id ]; then J="$(echo "$I"|cut -d/ -f4)"; N="$(cat "$I"/ANN_id)"; echo Series: "$J" "($N)"; if wget -q -O - --user-agent=mozilla http://www.animenewsnetwork.com/encyclopedia/anime.php?id=$N|perl -ne 'if(/English companies.*?Licensed by.*?<A HREF="company.php\?id=.*?>(.*?)<\/A>/){print"$1\n";$a=1;exit 0}END{exit 1 unless$a}'>~/tmp; then echo Licensed.; mv ~/tmp "$I"/licensed; else echo Unlicensed; fi; sleep 1; echo; fi; done
photo shuffle: ls|perl -e '@a=<>;@b=map{rand()}@a;@a=@a[sort{$b[$a] <=> $b[$b]}(0..$#a)];print map{sprintf("%02g.jpg %s",$_+1,$a[$_])}(0..$#a)'|while read I J; do ln -s $J $I; done
photo resize: for I in ??.jpg; do J=$(echo $I|sed 's/[^0-9]//g'); echo $I $J; convert +profile "*" -resize 800 $J.jpg $J\_small.bmp; convert $J\_small.bmp $J\_small.jpg; convert +profile "*" -resize 320 $J.jpg $J\_thumb.bmp; convert $J\_thumb.bmp $J\_thumb.jpg; done # bmp maybe not required; could have been Opera caching EXIF
photo comp index: F=''; for I in Agaeki Aksan Aen bakaidiot_ Blood_God Brad bucko dangerman Faux Mogmiester monk Spooky_Rach whythehell Yurgen Zed0; do F="$F<option value="$I">$I</option>"; done; (echo '<html><body><form method="post" action="sub.sh">Your name: <input name="n" type="text"/><p/>'; for I in `seq -f%02g 1 15`; do J=$(echo $I|sed 's/[^0-9]//g'); echo $J '<a href="'$J'_small.jpg"><img src="'$J'_thumb.jpg"/></a><select name="s$J">'"$F"'</select><p/>'; done; echo "</form></body></html>") > index.html
photo comp results: for I in $(cat subs.txt.marking|grep -v 2008|cut -d'&' -f1|cut -d= -f2|sort|uniq); do grep n=$I subs.txt|tail -n 1; done|cut -d= -f2-|sed s/'&'/' '/|while read I J; do echo "$I $J"|perl -ne '/(.*?) (.*)/;$n=$1;$_=$2;$a{$_}=++$a for(@a=qw/Zed0 Blood_God Brad Mogmiester Aen Spooky_Rach dangerman Aksan bakaidiot_ Faux Agaeki whythehell Yurgen bucko monk/);for(split/\&/){/s(.*)=(.*)/;$s++if$a{$2}==$1;$r.="$2\->$a[$1-1], "if$a{$2}!=$1}print sprintf("%02i",$s)." <b>".$n."</b>: ".int($s).($r?" ($r)":"")."\n"'; done|perl -ne 'while(/([^( ]*?)->(.*?),/g){print"$2\n"}'|sort|uniq -c
photo comp results: for I in $(cat subs.txt.marking|grep -v 2008|cut -d'&' -f1|cut -d= -f2|sort|uniq); do echo "$I"; grep n=$I subs.txt.marking|tail -n 1; done|cut -d= -f2-|sed s/'&'/' '/|while read I J; do echo "$I $J"|perl -ne '/(.*?) (.*)/;$n=$1;$_=$2;$a{$_}=++$a for(@a=qw/Zed0 Blood_God Brad Mogmiester Aen Spooky_Rach dangerman Aksan bakaidiot_ Faux Agaeki whythehell Yurgen bucko monk/);for(split/\&/){/s(.*)=(.*)/;$s++if$a{$2}==$1;$r.="$2\->$a[$1-1], "if$a{$2}!=$1}print sprintf("%02i",$s)." <b>".$n."</b>: ".int($s).($r?" ($r)":"")."\n"'; done|sort
photo comp desk hardness: for I in $(cat subs.txt.marking|grep -v 2008|cut -d'&' -f1|cut -d= -f2|sort|uniq); do grep n=$I subs.txt|tail -n 1; done|cut -d= -f2-|sed s/'&'/' '/|while read I J; do echo "$I $J"|perl -ne '/(.*?) (.*)/;$n=$1;$_=$2;$a{$_}=++$a for(@a=qw/Zed0 Blood_God Brad Mogmiester Aen Spooky_Rach dangerman Aksan bakaidiot_ Faux Agaeki whythehell Yurgen bucko monk/);for(split/\&/){/s(.*)=(.*)/;$s++if$a{$2}==$1;$r.="$2\->$a[$1-1], "if$a{$2}!=$1}print sprintf("%02i",$s)." <b>".$n."</b>: ".int($s).($r?" ($r)":"")."\n"'; done|sort
anki reset passwords: sqlite3 passwords.anki 'SELECT factId, value FROM fields WHERE fieldModelId = -1247592612793759413 AND ordinal = 0'|sed 's/|/ /'|while read I J; do echo $J; NP="$(pwgen -s -y 10 1|perl -pe 'chomp')"; SHA=$(echo -n "PxO})|>jSA*kmOt_%]UfjP30To=sgnG)d<*7Ul[Y$NP"|base64|sha1sum|cut -d' ' -f1); GPG=$(echo -n "$NP"|gpg -a -e --recipient "David Buckley"|perl -pe 's/\n/<br>/'); sqlite3 passwords.anki "UPDATE fields SET value=\"$GPG\" WHERE factId = $I AND fieldModelId = 219336218566379852 AND ordinal = 2"; sqlite3 passwords.anki "UPDATE fields SET value=\"$SHA\" WHERE factId = $I AND fieldModelId = 5313177876982843724 AND ordinal = 1"; done
anki get passwords: (echo; echo; echo; sqlite3 passwords.anki 'SELECT factId, value FROM fields WHERE fieldModelId = -1247592612793759413 AND ordinal = 0'|sed 's/|/ /'|while read I J; do PW="$(sqlite3 passwords.anki "SELECT value FROM fields WHERE factId = $I AND fieldModelId = 219336218566379852 AND ordinal = 2"|sed 's/<br[^>]*>/\n/g')"; echo -n "     $J: "; echo "$PW">tmp.asc|gpg -a --passphrase-fd 3 -o - tmp.asc 3<tmp/pass.pass; echo; done)
retag various artists/MOS crappediness: for I in *; do J="$(id3v2 -l "$I"|grep TIT2|cut -d' ' -f4-)"; art="$(echo "$J"|sed 's/ \/ .*//')"; tit="$(echo "$J"|sed 's/.* \/ //')"; id3v2 -a "$art" -t "$tit" "$I"; metaflac --remove-tag=ARTIST --set-tag=ARTIST="$art" --remove-tag=TITLE --set-tag=TITLE="$tit" ../../flac/Ministry\ of\ Sound\ -\ Dance\ Nation\ -\ Disc\ 1/"${I%mp3}flac"; vorbiscomment -w ../../ogg/Ministry\ of\ Sound\ -\ Dance\ Nation\ -\ Disc\ 1/"${I%mp3}ogg" -t "ARTIST=$art" -t "ALBUM=Dance Nation - Disc 1" -t "TITLE=$tit" -t DATE=2006 -t GENRE=Rock -t TRACKNUMBER="$(echo $I|sed 's/.*- \([0-9][0-9]\) -.*/\1/')" -t CDDB=4912b615; done
UTF-8 fix: find -type f|while read I; do J="$(echo "$I"|iconv --from=UTF-8 --to=ISO8859-1 2>/dev/null)"; if [ "$?" = "0" -a "$I" != "$J" ]; then DI="$(du -s "$I"|cut -f1)"; DJ="$(du -s "$J"|cut -f1)"; if [ "$DJ" -ge "$DI" ]; then echo "$J bigger [$DJ/$DI]"; DD=../junked/"$(dirname "$J")"; echo mkdir -p "$DD"; echo mv "$I" "$DD"; else echo "$J broken bigger [$DI/$DJ]"; DD=../backed/"$(dirname "$J")"; echo mkdir -p "$DD"; echo mv "$J" "$DD"; echo mv "$I" "$J"; fi; fi; done
